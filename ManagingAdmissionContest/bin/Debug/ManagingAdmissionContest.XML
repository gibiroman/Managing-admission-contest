<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ManagingAdmissionContest</name>
    </assembly>
    <members>
        <member name="T:ManagingAdmissionContest.Applicant">
            <summary>
            Manages a single applicant.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.Applicant.#ctor">
            <summary>
            Creates an applicant object with default values.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.Applicant.#ctor(System.String,System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates an applicant object with given values for each property.
            </summary>
            <param name="id">The id of the applicant</param>
            <param name="surname">The surname of the applicant</param>
            <param name="name">The name of the applicant</param>
            <param name="testGrade">The written test grade of the applicant</param>
            <param name="bacGrade">The bacalaureat grade of the applicant</param>
            <param name="infoGrade">The bacalaureat:informatics grade of the applicant</param>
            <param name="mathGrade">The bacalaureat:mathematics grade of the applicant</param>
            <param name="admissionGrade">The admission contest grade of the applicant</param>
        </member>
        <member name="M:ManagingAdmissionContest.Applicant.#ctor(System.String)">
            <summary>
            Creates an applicant object from a single string.
            </summary>
            <param name="applicatData">A string with the data of the applicant</param>
        </member>
        <member name="P:ManagingAdmissionContest.Applicant.Id">
            <summary>
            The id of the applicant
            </summary>
        </member>
        <member name="P:ManagingAdmissionContest.Applicant.Surname">
            <summary>
            The surname of the applicant
            </summary>
        </member>
        <member name="P:ManagingAdmissionContest.Applicant.Name">
            <summary>
            The name of the applicant
            </summary>
        </member>
        <member name="P:ManagingAdmissionContest.Applicant.TestGrade">
            <summary>
            The test grade of the applicant
            </summary>
        </member>
        <member name="P:ManagingAdmissionContest.Applicant.BacGrade">
            <summary>
            The bacalaureat grade of the applicant
            </summary>
        </member>
        <member name="P:ManagingAdmissionContest.Applicant.InfoGrade">
            <summary>
            The informatics grade of the applicant
            </summary>
        </member>
        <member name="P:ManagingAdmissionContest.Applicant.MathGrade">
            <summary>
            The mathematics grade of the applicant
            </summary>
        </member>
        <member name="P:ManagingAdmissionContest.Applicant.AdmissionGrade">
            <summary>
            The admission grade of the applicant
            </summary>
        </member>
        <member name="T:ManagingAdmissionContest.ApplicantDatabase">
            <summary>
            Manages the specific aspects of database connection for the applicant database.
            </summary>
        </member>
        <member name="T:ManagingAdmissionContest.IApplicantDatabase">
            <summary>
            Manages the database connection for the applicant database.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.IApplicantDatabase.DeleteDatabase">
            <summary>
            Deletes the database.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.IApplicantDatabase.InsertRecord(ManagingAdmissionContest.Applicant)">
            <summary>
            It inserts the applicant, if it's not already in the list.
            </summary>
            <param name="applicant">The applicant to be inserted.</param>
        </member>
        <member name="M:ManagingAdmissionContest.IApplicantDatabase.DeleteRecord(ManagingAdmissionContest.Applicant)">
            <summary>
            If the applicant is in the list, it deletes it.
            </summary>
            <param name="applicant">The applicant to be deleted.</param>
        </member>
        <member name="M:ManagingAdmissionContest.IApplicantDatabase.DeleteRecords(System.String,System.String)">
            <summary>
            It deletes the records that have the specified value for the specified property.
            Throws ApplicantPropertyNotFoundException if the property is not found.
            </summary>
            <param name="property">The property to search.</param>
            <param name="value">The value to search.</param>
        </member>
        <member name="M:ManagingAdmissionContest.IApplicantDatabase.UpdateRecords(System.String,System.String,System.String,System.String)">
            <summary>
            It updates the records that have a certain value for a certain property, 
            with a specified value for a specified property.
            Throws ApplicantPropertyNotFoundException if the property is not found.
            </summary>
            <param name="forProperty">The property to search.</param>
            <param name="forValue">The value to search.</param>
            <param name="setProperty">The property to update.</param>
            <param name="setValue">The new value for the property.</param>
        </member>
        <member name="M:ManagingAdmissionContest.IApplicantDatabase.SelectAllRecords">
            <summary>
            Returns all the applicant records.
            </summary>
            <returns>A list of Applicant objects.</returns>
        </member>
        <member name="M:ManagingAdmissionContest.IApplicantDatabase.SelectRecords(System.String,System.String)">
            <summary>
            It selects the records that have the specified value for the specified property.
            Throws ApplicantPropertyNotFoundException if the property is not found.
            </summary>
            <param name="property">The property to search.</param>
            <param name="value">The value to search.</param>
            <returns>Returns a list of Applicant objects.</returns>
        </member>
        <member name="M:ManagingAdmissionContest.IApplicantDatabase.SaveToFile">
            <summary>
            It saves the database to file.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.IApplicantDatabase.ToString">
            <summary>
            It converts the applicant database to string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.#ctor">
            <summary>
            Constructor initializes the list of Applicant objects.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.InitializeDatabase(System.String)">
            <summary>
            Initializes the only instance of this class. 
            If the file already exists, it loads the data from file, if not, it creates a file.
            </summary>
            <param name="fileName">The file name ("myfile.txt")</param>
            <returns>Returns the only instance of this class.</returns>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.InitializeDatabase(System.String,System.String)">
            <summary>
            Initializes the only instance of this class. 
            If the file already exists, it loads the data from file, if not, it creates a file.
            </summary>
            <param name="folderName">The folder name ("myfolder")</param>
            <param name="fileName">The file name ("myfile.txt")</param>
            <returns>Returns the only instance of this class.</returns>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.DeleteDatabase">
            <summary>
            Deletes a database.
            It sets the only instance to null.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.InsertRecord(ManagingAdmissionContest.Applicant)">
            <summary>
            It inserts the applicant, if it's not already in the list.
            </summary>
            <param name="applicant">The applicant to be inserted.</param>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.DeleteRecord(ManagingAdmissionContest.Applicant)">
            <summary>
            If the applicant is in the list, it deletes it.
            </summary>
            <param name="applicant">The applicant to be deleted.</param>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.DeleteRecords(System.String,System.String)">
            <summary>
            It deletes the records that have the specified value for the specified property.
            Throws ApplicantPropertyNotFoundException if the property is not found.
            </summary>
            <param name="property">The property to search.</param>
            <param name="value">The value to search.</param>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.GetPropValue(System.Object,System.String)">
            <summary>
            Returns the value of the property.
            </summary>
            <param name="src">The object that has the property.</param>
            <param name="propName">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.SetPropValue(System.Object,System.String,System.String)">
            <summary>
            It sets a value to a property.
            </summary>
            <param name="src">The object that has the property.</param>
            <param name="propName">The name of the property.</param>
            <param name="value">The value we want to set.</param>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.UpdateRecords(System.String,System.String,System.String,System.String)">
            <summary>
            It updates the records that have a certain value for a certain property, 
            with a specified value for a specified property.
            Throws ApplicantPropertyNotFoundException if the property is not found.
            </summary>
            <param name="forProperty">The property to search.</param>
            <param name="forValue">The value to search.</param>
            <param name="setProperty">The property to update.</param>
            <param name="setValue">The new value for the property.</param>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.SelectAllRecords">
            <summary>
            Returns all the applicant records.
            </summary>
            <returns>A list of Applicant objects.</returns>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.SelectRecords(System.String,System.String)">
            <summary>
            It selects the records that have the specified value for the specified property.
            Throws ApplicantPropertyNotFoundException if the property is not found.
            </summary>
            <param name="property">The property to search.</param>
            <param name="value">The value to search.</param>
            <returns>Returns a list of Applicant objects.</returns>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.SaveToFile">
            <summary>
            It saves the database to file.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantDatabase.LoadFromFile(System.String)">
            <summary>
            It loads the database from file.
            </summary>
            <param name="fileName">The file from which to load the database.</param>
            <returns>Returns an Applicant Database</returns>
        </member>
        <member name="P:ManagingAdmissionContest.ApplicantDatabase.FileName">
            <summary>
            The name of the file the table is saved in.
            </summary>
        </member>
        <member name="P:ManagingAdmissionContest.ApplicantDatabase.FolderName">
            <summary>
            The name of the folder the table is saved in.
            </summary>
        </member>
        <member name="P:ManagingAdmissionContest.ApplicantDatabase.Path">
            <summary>
            The string that contains the name of the folder and the file the table is saved in.
            </summary>
        </member>
        <member name="T:ManagingAdmissionContest.DatabaseException">
            <summary>
            Custom class for all database related exceptions.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.DatabaseException.#ctor">
            <summary>
            The base constructor for the DatabaseException class.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.DatabaseException.#ctor(System.String)">
            <summary>
            Another constructor for the DatabaseException class that receives a message as argument.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:ManagingAdmissionContest.ApplicantPropertyNotFoundException">
            <summary>
            Exception derived from DatabaseException that is thrown when a property is not found.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantPropertyNotFoundException.#ctor">
            <summary>
            The base constructor for the ApplicantPropertyNotFoundException class.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.ApplicantPropertyNotFoundException.#ctor(System.String)">
            <summary>
            Another constructor for the ApplicantPropertyNotFoundException class, that receives a message as argument.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:ManagingAdmissionContest.FileNotFoundException">
            <summary>
            Exception derived from DatabaseException that is thrown when a file is not found.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.FileNotFoundException.#ctor">
            <summary>
            The base constructor for the FileNotFoundException class.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.FileNotFoundException.#ctor(System.String)">
            <summary>
            Another constructor for the FileNotFoundException class, that receives a message as argument.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:ManagingAdmissionContest.Database">
            <summary>
            Manages the more general aspects of database connection for the applicant database.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.Database.CreateDatabase(System.String)">
            <summary>
            Creates a database.
            </summary>
            <param name="databaseName">The name of the database</param>
        </member>
        <member name="M:ManagingAdmissionContest.Database.CreateTable(System.String)">
            <summary>
            Creates a table.
            </summary>
            <param name="tableName">The name of the table</param>
        </member>
        <member name="M:ManagingAdmissionContest.Database.DeleteDatabase(System.String)">
            <summary>
            Deletes a database.
            </summary>
            <param name="databaseName">The name of the database</param>
        </member>
        <member name="M:ManagingAdmissionContest.Database.DeleteTable(System.String)">
            <summary>
            Deletes a table.
            </summary>
            <param name="tableName">The name of the table</param>
        </member>
        <member name="F:ManagingAdmissionContest.Form1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.Form1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ManagingAdmissionContest.Form1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ManagingAdmissionContest.Form2.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.Form2.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ManagingAdmissionContest.Form2.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ManagingAdmissionContest.Form3.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.Form3.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ManagingAdmissionContest.Form3.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ManagingAdmissionContest.MainForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.MainForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ManagingAdmissionContest.MainForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ManagingAdmissionContest.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:ManagingAdmissionContest.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ManagingAdmissionContest.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ManagingAdmissionContest.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
